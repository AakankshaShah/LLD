import java.util.*;

// Receiver
class TextEditor {
    private StringBuilder text = new StringBuilder();

    public void insert(int pos, String str) {
        text.insert(pos, str);
    }

    public void delete(int pos, int len) {
        text.delete(pos, pos + len);
    }

    public String getText() {
        return text.toString();
    }
}

// Command interface
interface Command {
    void execute();
    void undo();
}

// Concrete Insert Command
class InsertCommand implements Command {
    private TextEditor editor;
    private String str;
    private int pos;

    public InsertCommand(TextEditor editor, int pos, String str) {
        this.editor = editor;
        this.pos = pos;
        this.str = str;
    }

    public void execute() {
        editor.insert(pos, str);
    }

    public void undo() {
        editor.delete(pos, str.length());
    }
}

// Concrete Delete Command
class DeleteCommand implements Command {
    private TextEditor editor;
    private String deletedText;
    private int pos;
    private int len;

    public DeleteCommand(TextEditor editor, int pos, int len) {
        this.editor = editor;
        this.pos = pos;
        this.len = len;
    }

    public void execute() {
        deletedText = editor.getText().substring(pos, pos + len);
        editor.delete(pos, len);
    }

    public void undo() {
        editor.insert(pos, deletedText);
    }
}

// Command Manager / Invoker
class CommandManager {
    private Deque<Command> undoStack = new ArrayDeque<>();
    private Deque<Command> redoStack = new ArrayDeque<>();

    public void executeCommand(Command cmd) {
        cmd.execute();
        undoStack.push(cmd);
        redoStack.clear(); // clear redo stack on new operation
    }

    public void undo() {
        if (!undoStack.isEmpty()) {
            Command cmd = undoStack.pop();
            cmd.undo();
            redoStack.push(cmd);
        }
    }

    public void redo() {
        if (!redoStack.isEmpty()) {
            Command cmd = redoStack.pop();
            cmd.execute();
            undoStack.push(cmd);
        }
    }
}

// Demo
public class Main {
    public static void main(String[] args) {
        TextEditor editor = new TextEditor();
        CommandManager cm = new CommandManager();

        cm.executeCommand(new InsertCommand(editor, 0, "Hello"));
        cm.executeCommand(new InsertCommand(editor, 5, " World"));
        System.out.println(editor.getText()); // Hello World

        cm.undo();
        System.out.println(editor.getText()); // Hello

        cm.redo();
        System.out.println(editor.getText()); // Hello World

        cm.executeCommand(new DeleteCommand(editor, 5, 6));
        System.out.println(editor.getText()); // Hello

        cm.undo();
        System.out.println(editor.getText()); // Hello World
    }
}

